import pytest
from CreeDictionary.utils import WordClass
from CreeDictionary.utils.crkeng_xml_utils import (
    convert_xml_inflectional_category_to_word_class,
)


@pytest.mark.parametrize(
    ("ic_string", "expected_ic_obj"),
    [
        ("NDA-1", WordClass.NAD),
        ("NDI-?", WordClass.NID),
        ("NA-3", WordClass.NA),
        ("NA-4w", WordClass.NA),
        ("NDA-2", WordClass.NAD),
        ("VTI-2", WordClass.VTI),
        ("NDI-3", WordClass.NID),
        ("NDI-x", WordClass.NID),
        ("NDA-x", WordClass.NAD),
        ("IPJ  Exclamation", None),
        ("NI-5", WordClass.NI),
        ("NDA-4", WordClass.NAD),
        ("VII-n", WordClass.VII),
        ("NDI-4", WordClass.NID),
        ("VTA-2", WordClass.VTA),
        ("IPH", None),
        ("IPC ;; IPJ", WordClass.IPC),
        ("VAI-v", WordClass.VAI),
        ("VTA-1", WordClass.VTA),
        ("NI-3", WordClass.NI),
        ("VAI-n", WordClass.VAI),
        ("NDA-4w", WordClass.NAD),
        ("IPJ", None),
        ("PrI", None),
        ("NA-2", WordClass.NA),
        ("IPN", None),
        ("PR", None),
        ("IPV", WordClass.IPV),
        ("NA-?", WordClass.NA),
        ("NI-1", WordClass.NI),
        ("VTA-3", WordClass.VTA),
        ("NI-?", WordClass.NI),
        ("VTA-4", WordClass.VTA),
        ("VTI-3", WordClass.VTI),
        ("NI-2", WordClass.NI),
        ("NA-4", WordClass.NA),
        ("NDI-1", WordClass.NID),
        ("NA-1", WordClass.NA),
        ("IPP", None),
        ("NI-4w", WordClass.NI),
        ("INM", None),
        ("VTA-5", WordClass.VTA),
        ("PrA", None),
        ("NDI-2", WordClass.NID),
        ("IPC", WordClass.IPC),
        ("VTI-1", WordClass.VTI),
        ("NI-4", WordClass.NI),
        ("NDA-3", WordClass.NAD),
        ("VII-v", WordClass.VII),
        ("Interr", None),
    ],
)
def test_parse_xml_ic(ic_string, expected_ic_obj):
    assert convert_xml_inflectional_category_to_word_class(ic_string) == expected_ic_obj
